# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deploy

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.11.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: ✅ checkout source code. ✅
        uses: actions/checkout@v3

      - name: ⚙️ ${{ matrix.node-version }} version node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: ⚙️ set env
        working-directory: ./
        run: |
          pwd
          touch .env
          echo REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} >> .env
          echo REACT_APP_API_PORT=${{ secrets.REACT_APP_API_PORT }} >> .env
          echo REACT_APP_S3_URL=${{ secrets.REACT_APP_S3_URL }} >> .env
          cat .env

      - name: ✨ package install ✨
        working-directory: ./
        run: npm install
        
      - name: ✨ build ✨
        working-directory: ./
        run: npm run build

      - name: 📦 builded code packing 📦
        run: zip -r frontend.zip ./build ./scripts ./server.js ./appspec.yml ./.env ./package.json

      - name: 🌎 AWS connect 🌎
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: 🦖 zipped code upload to S3 🦖
        run: aws s3 cp --region ap-northeast-1 ./frontend.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/frontend/frontend.zip --source .

      - name: 🚀 deploy with AWS codeDeploy 🚀
        run: aws deploy create-deployment --application-name ${{ secrets.AWS_CODE_DEPLOY_APPLICATION_NAME }} --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name ${{ secrets.AWS_CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} --description "image resize frontend" --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},bundleType=zip,key=frontend/frontend.zip
